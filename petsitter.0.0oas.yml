openapi: 3.0.3
info:
  title: PetSitter API
  version: "0.1"
paths: 
  /users: 
     post:
       summary: Registers user
       requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/User'
       responses:
         '201':
           description: Created
           headers:
             Location:
               schema:
                 type: string
  /users/{id}:
     parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
      get:
        summary: Views user's details
        responses:
          '200': 
            description: OK
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/User'
      put:
        summary: Updates user's information
        requestBody: 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        responses: 
          '200':  
            description: OK
            content: 
              application/json:
                schema:  
                  $ref: '#/components/schemas/User'
      delete:
        summary: Deletes a user
        responses:
          '204': 
            description: No content
  /users/{id}/jobs:
    parameters: 
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
        summary: Retrieves a list of jobs of a specific user
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Job'
  /jobs: 
      post: 
        summary: Creates a Job
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        responses:
          '201':
            description: Created
            headers:
              Location:
                schema:
                  type: string
      get:
        summary: Retrieves a list of all jobs
        response: 
          '200':
             description: OK
             content:
               application/json:
                  schema: 
                    type: object
                    properties:
                      items:
                        type: array
                        items: 
                          $ref: '#/components/schemas/Job'
  /jobs/{id}:
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
      get:
        summary: Views a specific job
        responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Job'
      put: 
        summary: Updates a job
        requestBody: 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Job'
        responses: 
          '200':  
            description: OK
            content: 
              application/json:
                schema:  
                  $ref: '#/components/schemas/Job'
      delete:
        summary: Deletes a job
        responses: 
          '204:
             description: No content
  /jobs/{id}/job-applications:
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
      get:
        summary: Retrieves a list of applications for a job
        responses:
          '200': 
             description: OK
             content:
               application/json:
                schema:
                  type: object
                  properties:
                    items:
                      type: array
                      items: 
                         $ref: '#/components/schemas/JobApplication'
      post:
        summary: Creates a job application
        requestBody:
          content:
            application/json:
              schema: $ref: '#/components/schemas/JobApplication'
        responses:
          '201':
             description: Created
             headers:
               Location:
                 schema: 
                   type: string
      
  /job-applications/{id}:
     parameters: 
       - schema:
           type: integer
         name: id
         in: path
         required: true
     put:
        summary: Updates the job application 
        requestBody:
          description: Updates the job application details
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JobApplication'
         responses:
           description:
             '200':
               description: OK
               content: 
                 application/json:
                   schema:
                      $ref: '#/components/schemas/JobApplication'
  

                        
        
          
        
  components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
        full_name:
          type: string
        roles:
          type: array
          items:
            type: string
    Job:
        type: object
        properties: 
          id: 
            type: integer
          creator_user_id:
            type: integer
          start_time:
            type: string
          end_time:
            type: string
          activity:
            type: string
          dog: 
            $ref: '#/components/schemas/Dog'
    Dog:
       type: object
       properties:
         name: 
           type: string
         age:
           type: integer
         breed:
           type: string
         size:
           type: string
    JobApplication:
        type: object
        properties: 
          id: 
            type: integer
          status:
            type: string
          user_id:
            type: integer
          job_id:
            type: integer     

    


      
    
  
                   
                   
    
        
                    
    
                   
                   
        
        
